#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RepaireEntity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RepaireDB")]
	public partial class RepaireDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertcomingback(comingback instance);
    partial void Updatecomingback(comingback instance);
    partial void Deletecomingback(comingback instance);
    partial void Insertengineerinfo(engineerinfo instance);
    partial void Updateengineerinfo(engineerinfo instance);
    partial void Deleteengineerinfo(engineerinfo instance);
    partial void Insertengineerrole(engineerrole instance);
    partial void Updateengineerrole(engineerrole instance);
    partial void Deleteengineerrole(engineerrole instance);
    partial void Insertenvironmentlist(environmentlist instance);
    partial void Updateenvironmentlist(environmentlist instance);
    partial void Deleteenvironmentlist(environmentlist instance);
    partial void Insertrepaireinfo(repaireinfo instance);
    partial void Updaterepaireinfo(repaireinfo instance);
    partial void Deleterepaireinfo(repaireinfo instance);
    partial void Insertjobinfo(jobinfo instance);
    partial void Updatejobinfo(jobinfo instance);
    partial void Deletejobinfo(jobinfo instance);
    partial void Insertrepairelog(repairelog instance);
    partial void Updaterepairelog(repairelog instance);
    partial void Deleterepairelog(repairelog instance);
    partial void Insertriginfo(riginfo instance);
    partial void Updateriginfo(riginfo instance);
    partial void Deleteriginfo(riginfo instance);
    partial void Inserttoolinginfo(toolinginfo instance);
    partial void Updatetoolinginfo(toolinginfo instance);
    partial void Deletetoolinginfo(toolinginfo instance);
    partial void Inserttoolinglist(toolinglist instance);
    partial void Updatetoolinglist(toolinglist instance);
    partial void Deletetoolinglist(toolinglist instance);
    partial void Insertuselog(uselog instance);
    partial void Updateuselog(uselog instance);
    partial void Deleteuselog(uselog instance);
    partial void Insertuserinfo(userinfo instance);
    partial void Updateuserinfo(userinfo instance);
    partial void Deleteuserinfo(userinfo instance);
    partial void Insertuserrole(userrole instance);
    partial void Updateuserrole(userrole instance);
    partial void Deleteuserrole(userrole instance);
    partial void Insertwellinfo(wellinfo instance);
    partial void Updatewellinfo(wellinfo instance);
    partial void Deletewellinfo(wellinfo instance);
    #endregion
		
		public RepaireDBDataContext() : 
				base(global::RepaireEntity.Properties.Settings.Default.RepaireDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RepaireDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RepaireDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RepaireDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RepaireDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<comingback> comingback
		{
			get
			{
				return this.GetTable<comingback>();
			}
		}
		
		public System.Data.Linq.Table<engineerinfo> engineerinfo
		{
			get
			{
				return this.GetTable<engineerinfo>();
			}
		}
		
		public System.Data.Linq.Table<engineerrole> engineerrole
		{
			get
			{
				return this.GetTable<engineerrole>();
			}
		}
		
		public System.Data.Linq.Table<environmentlist> environmentlist
		{
			get
			{
				return this.GetTable<environmentlist>();
			}
		}
		
		public System.Data.Linq.Table<repaireinfo> repaireinfo
		{
			get
			{
				return this.GetTable<repaireinfo>();
			}
		}
		
		public System.Data.Linq.Table<jobinfo> jobinfo
		{
			get
			{
				return this.GetTable<jobinfo>();
			}
		}
		
		public System.Data.Linq.Table<repairelog> repairelog
		{
			get
			{
				return this.GetTable<repairelog>();
			}
		}
		
		public System.Data.Linq.Table<riginfo> riginfo
		{
			get
			{
				return this.GetTable<riginfo>();
			}
		}
		
		public System.Data.Linq.Table<toolinginfo> toolinginfo
		{
			get
			{
				return this.GetTable<toolinginfo>();
			}
		}
		
		public System.Data.Linq.Table<toolinglist> toolinglist
		{
			get
			{
				return this.GetTable<toolinglist>();
			}
		}
		
		public System.Data.Linq.Table<uselog> uselog
		{
			get
			{
				return this.GetTable<uselog>();
			}
		}
		
		public System.Data.Linq.Table<userinfo> userinfo
		{
			get
			{
				return this.GetTable<userinfo>();
			}
		}
		
		public System.Data.Linq.Table<userrole> userrole
		{
			get
			{
				return this.GetTable<userrole>();
			}
		}
		
		public System.Data.Linq.Table<wellinfo> wellinfo
		{
			get
			{
				return this.GetTable<wellinfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.comingback")]
	public partial class comingback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ComingbackSEQUENCE;
		
		private int _ComingbackID;
		
		private string _ComingbackLOCATION;
		
		private System.Data.Linq.Binary _ComingbackIMG;
		
		private EntitySet<repairelog> _repairelog;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComingbackSEQUENCEChanging(int value);
    partial void OnComingbackSEQUENCEChanged();
    partial void OnComingbackIDChanging(int value);
    partial void OnComingbackIDChanged();
    partial void OnComingbackLOCATIONChanging(string value);
    partial void OnComingbackLOCATIONChanged();
    partial void OnComingbackIMGChanging(System.Data.Linq.Binary value);
    partial void OnComingbackIMGChanged();
    #endregion
		
		public comingback()
		{
			this._repairelog = new EntitySet<repairelog>(new Action<repairelog>(this.attach_repairelog), new Action<repairelog>(this.detach_repairelog));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComingbackSEQUENCE", DbType="Int NOT NULL")]
		public int ComingbackSEQUENCE
		{
			get
			{
				return this._ComingbackSEQUENCE;
			}
			set
			{
				if ((this._ComingbackSEQUENCE != value))
				{
					this.OnComingbackSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._ComingbackSEQUENCE = value;
					this.SendPropertyChanged("ComingbackSEQUENCE");
					this.OnComingbackSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComingbackID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ComingbackID
		{
			get
			{
				return this._ComingbackID;
			}
			set
			{
				if ((this._ComingbackID != value))
				{
					this.OnComingbackIDChanging(value);
					this.SendPropertyChanging();
					this._ComingbackID = value;
					this.SendPropertyChanged("ComingbackID");
					this.OnComingbackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComingbackLOCATION", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ComingbackLOCATION
		{
			get
			{
				return this._ComingbackLOCATION;
			}
			set
			{
				if ((this._ComingbackLOCATION != value))
				{
					this.OnComingbackLOCATIONChanging(value);
					this.SendPropertyChanging();
					this._ComingbackLOCATION = value;
					this.SendPropertyChanged("ComingbackLOCATION");
					this.OnComingbackLOCATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComingbackIMG", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ComingbackIMG
		{
			get
			{
				return this._ComingbackIMG;
			}
			set
			{
				if ((this._ComingbackIMG != value))
				{
					this.OnComingbackIMGChanging(value);
					this.SendPropertyChanging();
					this._ComingbackIMG = value;
					this.SendPropertyChanged("ComingbackIMG");
					this.OnComingbackIMGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comingback_repairelog", Storage="_repairelog", ThisKey="ComingbackID", OtherKey="ComingbackID")]
		public EntitySet<repairelog> repairelog
		{
			get
			{
				return this._repairelog;
			}
			set
			{
				this._repairelog.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_repairelog(repairelog entity)
		{
			this.SendPropertyChanging();
			entity.comingback = this;
		}
		
		private void detach_repairelog(repairelog entity)
		{
			this.SendPropertyChanging();
			entity.comingback = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.engineerinfo")]
	public partial class engineerinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EngineerSEQUENCE;
		
		private int _EngineerID;
		
		private int _ERoleID;
		
		private int _UserID;
		
		private EntitySet<jobinfo> _jobinfo;
		
		private EntityRef<engineerrole> _engineerrole;
		
		private EntityRef<userinfo> _userinfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEngineerSEQUENCEChanging(int value);
    partial void OnEngineerSEQUENCEChanged();
    partial void OnEngineerIDChanging(int value);
    partial void OnEngineerIDChanged();
    partial void OnERoleIDChanging(int value);
    partial void OnERoleIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public engineerinfo()
		{
			this._jobinfo = new EntitySet<jobinfo>(new Action<jobinfo>(this.attach_jobinfo), new Action<jobinfo>(this.detach_jobinfo));
			this._engineerrole = default(EntityRef<engineerrole>);
			this._userinfo = default(EntityRef<userinfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineerSEQUENCE", DbType="Int NOT NULL")]
		public int EngineerSEQUENCE
		{
			get
			{
				return this._EngineerSEQUENCE;
			}
			set
			{
				if ((this._EngineerSEQUENCE != value))
				{
					this.OnEngineerSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._EngineerSEQUENCE = value;
					this.SendPropertyChanged("EngineerSEQUENCE");
					this.OnEngineerSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EngineerID
		{
			get
			{
				return this._EngineerID;
			}
			set
			{
				if ((this._EngineerID != value))
				{
					this.OnEngineerIDChanging(value);
					this.SendPropertyChanging();
					this._EngineerID = value;
					this.SendPropertyChanged("EngineerID");
					this.OnEngineerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ERoleID", DbType="Int NOT NULL")]
		public int ERoleID
		{
			get
			{
				return this._ERoleID;
			}
			set
			{
				if ((this._ERoleID != value))
				{
					if (this._engineerrole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnERoleIDChanging(value);
					this.SendPropertyChanging();
					this._ERoleID = value;
					this.SendPropertyChanged("ERoleID");
					this.OnERoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._userinfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="engineerinfo_jobinfo", Storage="_jobinfo", ThisKey="EngineerID", OtherKey="EngineerID")]
		public EntitySet<jobinfo> jobinfo
		{
			get
			{
				return this._jobinfo;
			}
			set
			{
				this._jobinfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="engineerrole_engineerinfo", Storage="_engineerrole", ThisKey="ERoleID", OtherKey="ERoleID", IsForeignKey=true)]
		public engineerrole engineerrole
		{
			get
			{
				return this._engineerrole.Entity;
			}
			set
			{
				engineerrole previousValue = this._engineerrole.Entity;
				if (((previousValue != value) 
							|| (this._engineerrole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._engineerrole.Entity = null;
						previousValue.engineerinfo.Remove(this);
					}
					this._engineerrole.Entity = value;
					if ((value != null))
					{
						value.engineerinfo.Add(this);
						this._ERoleID = value.ERoleID;
					}
					else
					{
						this._ERoleID = default(int);
					}
					this.SendPropertyChanged("engineerrole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="userinfo_engineerinfo", Storage="_userinfo", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public userinfo userinfo
		{
			get
			{
				return this._userinfo.Entity;
			}
			set
			{
				userinfo previousValue = this._userinfo.Entity;
				if (((previousValue != value) 
							|| (this._userinfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._userinfo.Entity = null;
						previousValue.engineerinfo.Remove(this);
					}
					this._userinfo.Entity = value;
					if ((value != null))
					{
						value.engineerinfo.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("userinfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jobinfo(jobinfo entity)
		{
			this.SendPropertyChanging();
			entity.engineerinfo = this;
		}
		
		private void detach_jobinfo(jobinfo entity)
		{
			this.SendPropertyChanging();
			entity.engineerinfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.engineerrole")]
	public partial class engineerrole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ERoleSEQUENCE;
		
		private int _ERoleID;
		
		private string _ERoleNAME;
		
		private EntitySet<engineerinfo> _engineerinfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnERoleSEQUENCEChanging(int value);
    partial void OnERoleSEQUENCEChanged();
    partial void OnERoleIDChanging(int value);
    partial void OnERoleIDChanged();
    partial void OnERoleNAMEChanging(string value);
    partial void OnERoleNAMEChanged();
    #endregion
		
		public engineerrole()
		{
			this._engineerinfo = new EntitySet<engineerinfo>(new Action<engineerinfo>(this.attach_engineerinfo), new Action<engineerinfo>(this.detach_engineerinfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ERoleSEQUENCE", DbType="Int NOT NULL")]
		public int ERoleSEQUENCE
		{
			get
			{
				return this._ERoleSEQUENCE;
			}
			set
			{
				if ((this._ERoleSEQUENCE != value))
				{
					this.OnERoleSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._ERoleSEQUENCE = value;
					this.SendPropertyChanged("ERoleSEQUENCE");
					this.OnERoleSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ERoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ERoleID
		{
			get
			{
				return this._ERoleID;
			}
			set
			{
				if ((this._ERoleID != value))
				{
					this.OnERoleIDChanging(value);
					this.SendPropertyChanging();
					this._ERoleID = value;
					this.SendPropertyChanged("ERoleID");
					this.OnERoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ERoleNAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ERoleNAME
		{
			get
			{
				return this._ERoleNAME;
			}
			set
			{
				if ((this._ERoleNAME != value))
				{
					this.OnERoleNAMEChanging(value);
					this.SendPropertyChanging();
					this._ERoleNAME = value;
					this.SendPropertyChanged("ERoleNAME");
					this.OnERoleNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="engineerrole_engineerinfo", Storage="_engineerinfo", ThisKey="ERoleID", OtherKey="ERoleID")]
		public EntitySet<engineerinfo> engineerinfo
		{
			get
			{
				return this._engineerinfo;
			}
			set
			{
				this._engineerinfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_engineerinfo(engineerinfo entity)
		{
			this.SendPropertyChanging();
			entity.engineerrole = this;
		}
		
		private void detach_engineerinfo(engineerinfo entity)
		{
			this.SendPropertyChanging();
			entity.engineerrole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.environmentlist")]
	public partial class environmentlist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EnvironmentSEQUENCE;
		
		private int _EnvironmentID;
		
		private decimal _LV1;
		
		private decimal _LV2;
		
		private decimal _LV3;
		
		private decimal _LV4;
		
		private decimal _LV5;
		
		private decimal _LV6;
		
		private decimal _LV7;
		
		private decimal _LV8;
		
		private decimal _SS1;
		
		private decimal _SS2;
		
		private decimal _SS3;
		
		private decimal _SS4;
		
		private decimal _SS5;
		
		private decimal _SS6;
		
		private decimal _SS7;
		
		private decimal _SS8;
		
		private decimal _AV1;
		
		private decimal _AV2;
		
		private decimal _AV3;
		
		private decimal _AV4;
		
		private decimal _AV5;
		
		private decimal _AV6;
		
		private decimal _AV7;
		
		private decimal _AV8;
		
		private decimal _TMP1;
		
		private decimal _TMP2;
		
		private decimal _TMP3;
		
		private decimal _TMP4;
		
		private decimal _TMP5;
		
		private decimal _TMP6;
		
		private decimal _TMP7;
		
		private decimal _TMP8;
		
		private EntitySet<uselog> _uselog;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnvironmentSEQUENCEChanging(int value);
    partial void OnEnvironmentSEQUENCEChanged();
    partial void OnEnvironmentIDChanging(int value);
    partial void OnEnvironmentIDChanged();
    partial void OnLV1Changing(decimal value);
    partial void OnLV1Changed();
    partial void OnLV2Changing(decimal value);
    partial void OnLV2Changed();
    partial void OnLV3Changing(decimal value);
    partial void OnLV3Changed();
    partial void OnLV4Changing(decimal value);
    partial void OnLV4Changed();
    partial void OnLV5Changing(decimal value);
    partial void OnLV5Changed();
    partial void OnLV6Changing(decimal value);
    partial void OnLV6Changed();
    partial void OnLV7Changing(decimal value);
    partial void OnLV7Changed();
    partial void OnLV8Changing(decimal value);
    partial void OnLV8Changed();
    partial void OnSS1Changing(decimal value);
    partial void OnSS1Changed();
    partial void OnSS2Changing(decimal value);
    partial void OnSS2Changed();
    partial void OnSS3Changing(decimal value);
    partial void OnSS3Changed();
    partial void OnSS4Changing(decimal value);
    partial void OnSS4Changed();
    partial void OnSS5Changing(decimal value);
    partial void OnSS5Changed();
    partial void OnSS6Changing(decimal value);
    partial void OnSS6Changed();
    partial void OnSS7Changing(decimal value);
    partial void OnSS7Changed();
    partial void OnSS8Changing(decimal value);
    partial void OnSS8Changed();
    partial void OnAV1Changing(decimal value);
    partial void OnAV1Changed();
    partial void OnAV2Changing(decimal value);
    partial void OnAV2Changed();
    partial void OnAV3Changing(decimal value);
    partial void OnAV3Changed();
    partial void OnAV4Changing(decimal value);
    partial void OnAV4Changed();
    partial void OnAV5Changing(decimal value);
    partial void OnAV5Changed();
    partial void OnAV6Changing(decimal value);
    partial void OnAV6Changed();
    partial void OnAV7Changing(decimal value);
    partial void OnAV7Changed();
    partial void OnAV8Changing(decimal value);
    partial void OnAV8Changed();
    partial void OnTMP1Changing(decimal value);
    partial void OnTMP1Changed();
    partial void OnTMP2Changing(decimal value);
    partial void OnTMP2Changed();
    partial void OnTMP3Changing(decimal value);
    partial void OnTMP3Changed();
    partial void OnTMP4Changing(decimal value);
    partial void OnTMP4Changed();
    partial void OnTMP5Changing(decimal value);
    partial void OnTMP5Changed();
    partial void OnTMP6Changing(decimal value);
    partial void OnTMP6Changed();
    partial void OnTMP7Changing(decimal value);
    partial void OnTMP7Changed();
    partial void OnTMP8Changing(decimal value);
    partial void OnTMP8Changed();
    #endregion
		
		public environmentlist()
		{
			this._uselog = new EntitySet<uselog>(new Action<uselog>(this.attach_uselog), new Action<uselog>(this.detach_uselog));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentSEQUENCE", DbType="Int NOT NULL")]
		public int EnvironmentSEQUENCE
		{
			get
			{
				return this._EnvironmentSEQUENCE;
			}
			set
			{
				if ((this._EnvironmentSEQUENCE != value))
				{
					this.OnEnvironmentSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentSEQUENCE = value;
					this.SendPropertyChanged("EnvironmentSEQUENCE");
					this.OnEnvironmentSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EnvironmentID
		{
			get
			{
				return this._EnvironmentID;
			}
			set
			{
				if ((this._EnvironmentID != value))
				{
					this.OnEnvironmentIDChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentID = value;
					this.SendPropertyChanged("EnvironmentID");
					this.OnEnvironmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LV1", DbType="Decimal(5,2) NOT NULL")]
		public decimal LV1
		{
			get
			{
				return this._LV1;
			}
			set
			{
				if ((this._LV1 != value))
				{
					this.OnLV1Changing(value);
					this.SendPropertyChanging();
					this._LV1 = value;
					this.SendPropertyChanged("LV1");
					this.OnLV1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LV2", DbType="Decimal(5,2) NOT NULL")]
		public decimal LV2
		{
			get
			{
				return this._LV2;
			}
			set
			{
				if ((this._LV2 != value))
				{
					this.OnLV2Changing(value);
					this.SendPropertyChanging();
					this._LV2 = value;
					this.SendPropertyChanged("LV2");
					this.OnLV2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LV3", DbType="Decimal(5,2) NOT NULL")]
		public decimal LV3
		{
			get
			{
				return this._LV3;
			}
			set
			{
				if ((this._LV3 != value))
				{
					this.OnLV3Changing(value);
					this.SendPropertyChanging();
					this._LV3 = value;
					this.SendPropertyChanged("LV3");
					this.OnLV3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LV4", DbType="Decimal(5,2) NOT NULL")]
		public decimal LV4
		{
			get
			{
				return this._LV4;
			}
			set
			{
				if ((this._LV4 != value))
				{
					this.OnLV4Changing(value);
					this.SendPropertyChanging();
					this._LV4 = value;
					this.SendPropertyChanged("LV4");
					this.OnLV4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LV5", DbType="Decimal(5,2) NOT NULL")]
		public decimal LV5
		{
			get
			{
				return this._LV5;
			}
			set
			{
				if ((this._LV5 != value))
				{
					this.OnLV5Changing(value);
					this.SendPropertyChanging();
					this._LV5 = value;
					this.SendPropertyChanged("LV5");
					this.OnLV5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LV6", DbType="Decimal(5,2) NOT NULL")]
		public decimal LV6
		{
			get
			{
				return this._LV6;
			}
			set
			{
				if ((this._LV6 != value))
				{
					this.OnLV6Changing(value);
					this.SendPropertyChanging();
					this._LV6 = value;
					this.SendPropertyChanged("LV6");
					this.OnLV6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LV7", DbType="Decimal(5,2) NOT NULL")]
		public decimal LV7
		{
			get
			{
				return this._LV7;
			}
			set
			{
				if ((this._LV7 != value))
				{
					this.OnLV7Changing(value);
					this.SendPropertyChanging();
					this._LV7 = value;
					this.SendPropertyChanged("LV7");
					this.OnLV7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LV8", DbType="Decimal(5,2) NOT NULL")]
		public decimal LV8
		{
			get
			{
				return this._LV8;
			}
			set
			{
				if ((this._LV8 != value))
				{
					this.OnLV8Changing(value);
					this.SendPropertyChanging();
					this._LV8 = value;
					this.SendPropertyChanged("LV8");
					this.OnLV8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS1", DbType="Decimal(5,2) NOT NULL")]
		public decimal SS1
		{
			get
			{
				return this._SS1;
			}
			set
			{
				if ((this._SS1 != value))
				{
					this.OnSS1Changing(value);
					this.SendPropertyChanging();
					this._SS1 = value;
					this.SendPropertyChanged("SS1");
					this.OnSS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS2", DbType="Decimal(5,2) NOT NULL")]
		public decimal SS2
		{
			get
			{
				return this._SS2;
			}
			set
			{
				if ((this._SS2 != value))
				{
					this.OnSS2Changing(value);
					this.SendPropertyChanging();
					this._SS2 = value;
					this.SendPropertyChanged("SS2");
					this.OnSS2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS3", DbType="Decimal(5,2) NOT NULL")]
		public decimal SS3
		{
			get
			{
				return this._SS3;
			}
			set
			{
				if ((this._SS3 != value))
				{
					this.OnSS3Changing(value);
					this.SendPropertyChanging();
					this._SS3 = value;
					this.SendPropertyChanged("SS3");
					this.OnSS3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS4", DbType="Decimal(5,2) NOT NULL")]
		public decimal SS4
		{
			get
			{
				return this._SS4;
			}
			set
			{
				if ((this._SS4 != value))
				{
					this.OnSS4Changing(value);
					this.SendPropertyChanging();
					this._SS4 = value;
					this.SendPropertyChanged("SS4");
					this.OnSS4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS5", DbType="Decimal(5,2) NOT NULL")]
		public decimal SS5
		{
			get
			{
				return this._SS5;
			}
			set
			{
				if ((this._SS5 != value))
				{
					this.OnSS5Changing(value);
					this.SendPropertyChanging();
					this._SS5 = value;
					this.SendPropertyChanged("SS5");
					this.OnSS5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS6", DbType="Decimal(5,2) NOT NULL")]
		public decimal SS6
		{
			get
			{
				return this._SS6;
			}
			set
			{
				if ((this._SS6 != value))
				{
					this.OnSS6Changing(value);
					this.SendPropertyChanging();
					this._SS6 = value;
					this.SendPropertyChanged("SS6");
					this.OnSS6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS7", DbType="Decimal(5,2) NOT NULL")]
		public decimal SS7
		{
			get
			{
				return this._SS7;
			}
			set
			{
				if ((this._SS7 != value))
				{
					this.OnSS7Changing(value);
					this.SendPropertyChanging();
					this._SS7 = value;
					this.SendPropertyChanged("SS7");
					this.OnSS7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS8", DbType="Decimal(5,2) NOT NULL")]
		public decimal SS8
		{
			get
			{
				return this._SS8;
			}
			set
			{
				if ((this._SS8 != value))
				{
					this.OnSS8Changing(value);
					this.SendPropertyChanging();
					this._SS8 = value;
					this.SendPropertyChanged("SS8");
					this.OnSS8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AV1", DbType="Decimal(5,2) NOT NULL")]
		public decimal AV1
		{
			get
			{
				return this._AV1;
			}
			set
			{
				if ((this._AV1 != value))
				{
					this.OnAV1Changing(value);
					this.SendPropertyChanging();
					this._AV1 = value;
					this.SendPropertyChanged("AV1");
					this.OnAV1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AV2", DbType="Decimal(5,2) NOT NULL")]
		public decimal AV2
		{
			get
			{
				return this._AV2;
			}
			set
			{
				if ((this._AV2 != value))
				{
					this.OnAV2Changing(value);
					this.SendPropertyChanging();
					this._AV2 = value;
					this.SendPropertyChanged("AV2");
					this.OnAV2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AV3", DbType="Decimal(5,2) NOT NULL")]
		public decimal AV3
		{
			get
			{
				return this._AV3;
			}
			set
			{
				if ((this._AV3 != value))
				{
					this.OnAV3Changing(value);
					this.SendPropertyChanging();
					this._AV3 = value;
					this.SendPropertyChanged("AV3");
					this.OnAV3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AV4", DbType="Decimal(5,2) NOT NULL")]
		public decimal AV4
		{
			get
			{
				return this._AV4;
			}
			set
			{
				if ((this._AV4 != value))
				{
					this.OnAV4Changing(value);
					this.SendPropertyChanging();
					this._AV4 = value;
					this.SendPropertyChanged("AV4");
					this.OnAV4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AV5", DbType="Decimal(5,2) NOT NULL")]
		public decimal AV5
		{
			get
			{
				return this._AV5;
			}
			set
			{
				if ((this._AV5 != value))
				{
					this.OnAV5Changing(value);
					this.SendPropertyChanging();
					this._AV5 = value;
					this.SendPropertyChanged("AV5");
					this.OnAV5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AV6", DbType="Decimal(5,2) NOT NULL")]
		public decimal AV6
		{
			get
			{
				return this._AV6;
			}
			set
			{
				if ((this._AV6 != value))
				{
					this.OnAV6Changing(value);
					this.SendPropertyChanging();
					this._AV6 = value;
					this.SendPropertyChanged("AV6");
					this.OnAV6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AV7", DbType="Decimal(5,2) NOT NULL")]
		public decimal AV7
		{
			get
			{
				return this._AV7;
			}
			set
			{
				if ((this._AV7 != value))
				{
					this.OnAV7Changing(value);
					this.SendPropertyChanging();
					this._AV7 = value;
					this.SendPropertyChanged("AV7");
					this.OnAV7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AV8", DbType="Decimal(5,2) NOT NULL")]
		public decimal AV8
		{
			get
			{
				return this._AV8;
			}
			set
			{
				if ((this._AV8 != value))
				{
					this.OnAV8Changing(value);
					this.SendPropertyChanging();
					this._AV8 = value;
					this.SendPropertyChanged("AV8");
					this.OnAV8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMP1", DbType="Decimal(5,2) NOT NULL")]
		public decimal TMP1
		{
			get
			{
				return this._TMP1;
			}
			set
			{
				if ((this._TMP1 != value))
				{
					this.OnTMP1Changing(value);
					this.SendPropertyChanging();
					this._TMP1 = value;
					this.SendPropertyChanged("TMP1");
					this.OnTMP1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMP2", DbType="Decimal(5,2) NOT NULL")]
		public decimal TMP2
		{
			get
			{
				return this._TMP2;
			}
			set
			{
				if ((this._TMP2 != value))
				{
					this.OnTMP2Changing(value);
					this.SendPropertyChanging();
					this._TMP2 = value;
					this.SendPropertyChanged("TMP2");
					this.OnTMP2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMP3", DbType="Decimal(5,2) NOT NULL")]
		public decimal TMP3
		{
			get
			{
				return this._TMP3;
			}
			set
			{
				if ((this._TMP3 != value))
				{
					this.OnTMP3Changing(value);
					this.SendPropertyChanging();
					this._TMP3 = value;
					this.SendPropertyChanged("TMP3");
					this.OnTMP3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMP4", DbType="Decimal(5,2) NOT NULL")]
		public decimal TMP4
		{
			get
			{
				return this._TMP4;
			}
			set
			{
				if ((this._TMP4 != value))
				{
					this.OnTMP4Changing(value);
					this.SendPropertyChanging();
					this._TMP4 = value;
					this.SendPropertyChanged("TMP4");
					this.OnTMP4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMP5", DbType="Decimal(5,2) NOT NULL")]
		public decimal TMP5
		{
			get
			{
				return this._TMP5;
			}
			set
			{
				if ((this._TMP5 != value))
				{
					this.OnTMP5Changing(value);
					this.SendPropertyChanging();
					this._TMP5 = value;
					this.SendPropertyChanged("TMP5");
					this.OnTMP5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMP6", DbType="Decimal(5,2) NOT NULL")]
		public decimal TMP6
		{
			get
			{
				return this._TMP6;
			}
			set
			{
				if ((this._TMP6 != value))
				{
					this.OnTMP6Changing(value);
					this.SendPropertyChanging();
					this._TMP6 = value;
					this.SendPropertyChanged("TMP6");
					this.OnTMP6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMP7", DbType="Decimal(5,2) NOT NULL")]
		public decimal TMP7
		{
			get
			{
				return this._TMP7;
			}
			set
			{
				if ((this._TMP7 != value))
				{
					this.OnTMP7Changing(value);
					this.SendPropertyChanging();
					this._TMP7 = value;
					this.SendPropertyChanged("TMP7");
					this.OnTMP7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMP8", DbType="Decimal(5,2) NOT NULL")]
		public decimal TMP8
		{
			get
			{
				return this._TMP8;
			}
			set
			{
				if ((this._TMP8 != value))
				{
					this.OnTMP8Changing(value);
					this.SendPropertyChanging();
					this._TMP8 = value;
					this.SendPropertyChanged("TMP8");
					this.OnTMP8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="environmentlist_uselog", Storage="_uselog", ThisKey="EnvironmentID", OtherKey="EnvironmentID")]
		public EntitySet<uselog> uselog
		{
			get
			{
				return this._uselog;
			}
			set
			{
				this._uselog.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_uselog(uselog entity)
		{
			this.SendPropertyChanging();
			entity.environmentlist = this;
		}
		
		private void detach_uselog(uselog entity)
		{
			this.SendPropertyChanging();
			entity.environmentlist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.repaireinfo")]
	public partial class repaireinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaireplanSEQUENCE;
		
		private int _RepaireplanID;
		
		private int _RepaireplanTYPE;
		
		private EntitySet<repairelog> _repairelog;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaireplanSEQUENCEChanging(int value);
    partial void OnRepaireplanSEQUENCEChanged();
    partial void OnRepaireplanIDChanging(int value);
    partial void OnRepaireplanIDChanged();
    partial void OnRepaireplanTYPEChanging(int value);
    partial void OnRepaireplanTYPEChanged();
    #endregion
		
		public repaireinfo()
		{
			this._repairelog = new EntitySet<repairelog>(new Action<repairelog>(this.attach_repairelog), new Action<repairelog>(this.detach_repairelog));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaireplanSEQUENCE", DbType="Int NOT NULL")]
		public int RepaireplanSEQUENCE
		{
			get
			{
				return this._RepaireplanSEQUENCE;
			}
			set
			{
				if ((this._RepaireplanSEQUENCE != value))
				{
					this.OnRepaireplanSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._RepaireplanSEQUENCE = value;
					this.SendPropertyChanged("RepaireplanSEQUENCE");
					this.OnRepaireplanSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaireplanID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RepaireplanID
		{
			get
			{
				return this._RepaireplanID;
			}
			set
			{
				if ((this._RepaireplanID != value))
				{
					this.OnRepaireplanIDChanging(value);
					this.SendPropertyChanging();
					this._RepaireplanID = value;
					this.SendPropertyChanged("RepaireplanID");
					this.OnRepaireplanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaireplanTYPE", DbType="Int NOT NULL")]
		public int RepaireplanTYPE
		{
			get
			{
				return this._RepaireplanTYPE;
			}
			set
			{
				if ((this._RepaireplanTYPE != value))
				{
					this.OnRepaireplanTYPEChanging(value);
					this.SendPropertyChanging();
					this._RepaireplanTYPE = value;
					this.SendPropertyChanged("RepaireplanTYPE");
					this.OnRepaireplanTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="repaireinfo_repairelog", Storage="_repairelog", ThisKey="RepaireplanID", OtherKey="RepaireplanID")]
		public EntitySet<repairelog> repairelog
		{
			get
			{
				return this._repairelog;
			}
			set
			{
				this._repairelog.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_repairelog(repairelog entity)
		{
			this.SendPropertyChanging();
			entity.repaireinfo = this;
		}
		
		private void detach_repairelog(repairelog entity)
		{
			this.SendPropertyChanging();
			entity.repaireinfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.jobinfo")]
	public partial class jobinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UJobSEQUENCE;
		
		private int _UJobID;
		
		private string _JobNAME;
		
		private string _JobCONTENT;
		
		private int _JobSTATE;
		
		private string _JobREMARK;
		
		private int _EngineerID;
		
		private int _FieldID;
		
		private int _RigID;
		
		private int _WellID;
		
		private string _JobCONDITION;
		
		private EntitySet<uselog> _uselog;
		
		private EntityRef<engineerinfo> _engineerinfo;
		
		private EntityRef<riginfo> _riginfo;
		
		private EntityRef<wellinfo> _wellinfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUJobSEQUENCEChanging(int value);
    partial void OnUJobSEQUENCEChanged();
    partial void OnUJobIDChanging(int value);
    partial void OnUJobIDChanged();
    partial void OnJobNAMEChanging(string value);
    partial void OnJobNAMEChanged();
    partial void OnJobCONTENTChanging(string value);
    partial void OnJobCONTENTChanged();
    partial void OnJobSTATEChanging(int value);
    partial void OnJobSTATEChanged();
    partial void OnJobREMARKChanging(string value);
    partial void OnJobREMARKChanged();
    partial void OnEngineerIDChanging(int value);
    partial void OnEngineerIDChanged();
    partial void OnFieldIDChanging(int value);
    partial void OnFieldIDChanged();
    partial void OnRigIDChanging(int value);
    partial void OnRigIDChanged();
    partial void OnWellIDChanging(int value);
    partial void OnWellIDChanged();
    partial void OnJobCONDITIONChanging(string value);
    partial void OnJobCONDITIONChanged();
    #endregion
		
		public jobinfo()
		{
			this._uselog = new EntitySet<uselog>(new Action<uselog>(this.attach_uselog), new Action<uselog>(this.detach_uselog));
			this._engineerinfo = default(EntityRef<engineerinfo>);
			this._riginfo = default(EntityRef<riginfo>);
			this._wellinfo = default(EntityRef<wellinfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UJobSEQUENCE", DbType="Int NOT NULL")]
		public int UJobSEQUENCE
		{
			get
			{
				return this._UJobSEQUENCE;
			}
			set
			{
				if ((this._UJobSEQUENCE != value))
				{
					this.OnUJobSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._UJobSEQUENCE = value;
					this.SendPropertyChanged("UJobSEQUENCE");
					this.OnUJobSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UJobID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UJobID
		{
			get
			{
				return this._UJobID;
			}
			set
			{
				if ((this._UJobID != value))
				{
					this.OnUJobIDChanging(value);
					this.SendPropertyChanging();
					this._UJobID = value;
					this.SendPropertyChanged("UJobID");
					this.OnUJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JobNAME
		{
			get
			{
				return this._JobNAME;
			}
			set
			{
				if ((this._JobNAME != value))
				{
					this.OnJobNAMEChanging(value);
					this.SendPropertyChanging();
					this._JobNAME = value;
					this.SendPropertyChanged("JobNAME");
					this.OnJobNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCONTENT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JobCONTENT
		{
			get
			{
				return this._JobCONTENT;
			}
			set
			{
				if ((this._JobCONTENT != value))
				{
					this.OnJobCONTENTChanging(value);
					this.SendPropertyChanging();
					this._JobCONTENT = value;
					this.SendPropertyChanged("JobCONTENT");
					this.OnJobCONTENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobSTATE", DbType="Int NOT NULL")]
		public int JobSTATE
		{
			get
			{
				return this._JobSTATE;
			}
			set
			{
				if ((this._JobSTATE != value))
				{
					this.OnJobSTATEChanging(value);
					this.SendPropertyChanging();
					this._JobSTATE = value;
					this.SendPropertyChanged("JobSTATE");
					this.OnJobSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobREMARK", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JobREMARK
		{
			get
			{
				return this._JobREMARK;
			}
			set
			{
				if ((this._JobREMARK != value))
				{
					this.OnJobREMARKChanging(value);
					this.SendPropertyChanging();
					this._JobREMARK = value;
					this.SendPropertyChanged("JobREMARK");
					this.OnJobREMARKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineerID", DbType="Int NOT NULL")]
		public int EngineerID
		{
			get
			{
				return this._EngineerID;
			}
			set
			{
				if ((this._EngineerID != value))
				{
					if (this._engineerinfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEngineerIDChanging(value);
					this.SendPropertyChanging();
					this._EngineerID = value;
					this.SendPropertyChanged("EngineerID");
					this.OnEngineerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Int NOT NULL")]
		public int FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this.OnFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FieldID = value;
					this.SendPropertyChanged("FieldID");
					this.OnFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigID", DbType="Int NOT NULL")]
		public int RigID
		{
			get
			{
				return this._RigID;
			}
			set
			{
				if ((this._RigID != value))
				{
					if (this._riginfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRigIDChanging(value);
					this.SendPropertyChanging();
					this._RigID = value;
					this.SendPropertyChanged("RigID");
					this.OnRigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WellID", DbType="Int NOT NULL")]
		public int WellID
		{
			get
			{
				return this._WellID;
			}
			set
			{
				if ((this._WellID != value))
				{
					if (this._wellinfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWellIDChanging(value);
					this.SendPropertyChanging();
					this._WellID = value;
					this.SendPropertyChanged("WellID");
					this.OnWellIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCONDITION", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string JobCONDITION
		{
			get
			{
				return this._JobCONDITION;
			}
			set
			{
				if ((this._JobCONDITION != value))
				{
					this.OnJobCONDITIONChanging(value);
					this.SendPropertyChanging();
					this._JobCONDITION = value;
					this.SendPropertyChanged("JobCONDITION");
					this.OnJobCONDITIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jobinfo_uselog", Storage="_uselog", ThisKey="UJobID", OtherKey="UJobID")]
		public EntitySet<uselog> uselog
		{
			get
			{
				return this._uselog;
			}
			set
			{
				this._uselog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="engineerinfo_jobinfo", Storage="_engineerinfo", ThisKey="EngineerID", OtherKey="EngineerID", IsForeignKey=true)]
		public engineerinfo engineerinfo
		{
			get
			{
				return this._engineerinfo.Entity;
			}
			set
			{
				engineerinfo previousValue = this._engineerinfo.Entity;
				if (((previousValue != value) 
							|| (this._engineerinfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._engineerinfo.Entity = null;
						previousValue.jobinfo.Remove(this);
					}
					this._engineerinfo.Entity = value;
					if ((value != null))
					{
						value.jobinfo.Add(this);
						this._EngineerID = value.EngineerID;
					}
					else
					{
						this._EngineerID = default(int);
					}
					this.SendPropertyChanged("engineerinfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="riginfo_jobinfo", Storage="_riginfo", ThisKey="RigID", OtherKey="RigID", IsForeignKey=true)]
		public riginfo riginfo
		{
			get
			{
				return this._riginfo.Entity;
			}
			set
			{
				riginfo previousValue = this._riginfo.Entity;
				if (((previousValue != value) 
							|| (this._riginfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._riginfo.Entity = null;
						previousValue.jobinfo.Remove(this);
					}
					this._riginfo.Entity = value;
					if ((value != null))
					{
						value.jobinfo.Add(this);
						this._RigID = value.RigID;
					}
					else
					{
						this._RigID = default(int);
					}
					this.SendPropertyChanged("riginfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="wellinfo_jobinfo", Storage="_wellinfo", ThisKey="WellID", OtherKey="WellID", IsForeignKey=true)]
		public wellinfo wellinfo
		{
			get
			{
				return this._wellinfo.Entity;
			}
			set
			{
				wellinfo previousValue = this._wellinfo.Entity;
				if (((previousValue != value) 
							|| (this._wellinfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._wellinfo.Entity = null;
						previousValue.jobinfo.Remove(this);
					}
					this._wellinfo.Entity = value;
					if ((value != null))
					{
						value.jobinfo.Add(this);
						this._WellID = value.WellID;
					}
					else
					{
						this._WellID = default(int);
					}
					this.SendPropertyChanged("wellinfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_uselog(uselog entity)
		{
			this.SendPropertyChanging();
			entity.jobinfo = this;
		}
		
		private void detach_uselog(uselog entity)
		{
			this.SendPropertyChanging();
			entity.jobinfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.repairelog")]
	public partial class repairelog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaireSEQUENCE;
		
		private int _RepaireID;
		
		private int _ComingbackID;
		
		private int _RepaireplanID;
		
		private int _UseID;
		
		private int _FaultID;
		
		private int _ComingcheckID;
		
		private int _ProcesscontrolID;
		
		private string _RepairLEVEL;
		
		private bool _CheckRE;
		
		private int _REreportID;
		
		private int _MaterielID;
		
		private int _ConfirmationslipID;
		
		private int _InstallcontrolID;
		
		private int _FinalcheckID;
		
		private int _LogisticsID;
		
		private EntityRef<comingback> _comingback;
		
		private EntityRef<repaireinfo> _repaireinfo;
		
		private EntityRef<uselog> _uselog;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaireSEQUENCEChanging(int value);
    partial void OnRepaireSEQUENCEChanged();
    partial void OnRepaireIDChanging(int value);
    partial void OnRepaireIDChanged();
    partial void OnComingbackIDChanging(int value);
    partial void OnComingbackIDChanged();
    partial void OnRepaireplanIDChanging(int value);
    partial void OnRepaireplanIDChanged();
    partial void OnUseIDChanging(int value);
    partial void OnUseIDChanged();
    partial void OnFaultIDChanging(int value);
    partial void OnFaultIDChanged();
    partial void OnComingcheckIDChanging(int value);
    partial void OnComingcheckIDChanged();
    partial void OnProcesscontrolIDChanging(int value);
    partial void OnProcesscontrolIDChanged();
    partial void OnRepairLEVELChanging(string value);
    partial void OnRepairLEVELChanged();
    partial void OnCheckREChanging(bool value);
    partial void OnCheckREChanged();
    partial void OnREreportIDChanging(int value);
    partial void OnREreportIDChanged();
    partial void OnMaterielIDChanging(int value);
    partial void OnMaterielIDChanged();
    partial void OnConfirmationslipIDChanging(int value);
    partial void OnConfirmationslipIDChanged();
    partial void OnInstallcontrolIDChanging(int value);
    partial void OnInstallcontrolIDChanged();
    partial void OnFinalcheckIDChanging(int value);
    partial void OnFinalcheckIDChanged();
    partial void OnLogisticsIDChanging(int value);
    partial void OnLogisticsIDChanged();
    #endregion
		
		public repairelog()
		{
			this._comingback = default(EntityRef<comingback>);
			this._repaireinfo = default(EntityRef<repaireinfo>);
			this._uselog = default(EntityRef<uselog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaireSEQUENCE", DbType="Int NOT NULL")]
		public int RepaireSEQUENCE
		{
			get
			{
				return this._RepaireSEQUENCE;
			}
			set
			{
				if ((this._RepaireSEQUENCE != value))
				{
					this.OnRepaireSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._RepaireSEQUENCE = value;
					this.SendPropertyChanged("RepaireSEQUENCE");
					this.OnRepaireSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaireID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RepaireID
		{
			get
			{
				return this._RepaireID;
			}
			set
			{
				if ((this._RepaireID != value))
				{
					this.OnRepaireIDChanging(value);
					this.SendPropertyChanging();
					this._RepaireID = value;
					this.SendPropertyChanged("RepaireID");
					this.OnRepaireIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComingbackID", DbType="Int NOT NULL")]
		public int ComingbackID
		{
			get
			{
				return this._ComingbackID;
			}
			set
			{
				if ((this._ComingbackID != value))
				{
					if (this._comingback.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComingbackIDChanging(value);
					this.SendPropertyChanging();
					this._ComingbackID = value;
					this.SendPropertyChanged("ComingbackID");
					this.OnComingbackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaireplanID", DbType="Int NOT NULL")]
		public int RepaireplanID
		{
			get
			{
				return this._RepaireplanID;
			}
			set
			{
				if ((this._RepaireplanID != value))
				{
					if (this._repaireinfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepaireplanIDChanging(value);
					this.SendPropertyChanging();
					this._RepaireplanID = value;
					this.SendPropertyChanged("RepaireplanID");
					this.OnRepaireplanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseID", DbType="Int NOT NULL")]
		public int UseID
		{
			get
			{
				return this._UseID;
			}
			set
			{
				if ((this._UseID != value))
				{
					if (this._uselog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUseIDChanging(value);
					this.SendPropertyChanging();
					this._UseID = value;
					this.SendPropertyChanged("UseID");
					this.OnUseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaultID", DbType="Int NOT NULL")]
		public int FaultID
		{
			get
			{
				return this._FaultID;
			}
			set
			{
				if ((this._FaultID != value))
				{
					this.OnFaultIDChanging(value);
					this.SendPropertyChanging();
					this._FaultID = value;
					this.SendPropertyChanged("FaultID");
					this.OnFaultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComingcheckID", DbType="Int NOT NULL")]
		public int ComingcheckID
		{
			get
			{
				return this._ComingcheckID;
			}
			set
			{
				if ((this._ComingcheckID != value))
				{
					this.OnComingcheckIDChanging(value);
					this.SendPropertyChanging();
					this._ComingcheckID = value;
					this.SendPropertyChanged("ComingcheckID");
					this.OnComingcheckIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcesscontrolID", DbType="Int NOT NULL")]
		public int ProcesscontrolID
		{
			get
			{
				return this._ProcesscontrolID;
			}
			set
			{
				if ((this._ProcesscontrolID != value))
				{
					this.OnProcesscontrolIDChanging(value);
					this.SendPropertyChanging();
					this._ProcesscontrolID = value;
					this.SendPropertyChanged("ProcesscontrolID");
					this.OnProcesscontrolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairLEVEL", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string RepairLEVEL
		{
			get
			{
				return this._RepairLEVEL;
			}
			set
			{
				if ((this._RepairLEVEL != value))
				{
					this.OnRepairLEVELChanging(value);
					this.SendPropertyChanging();
					this._RepairLEVEL = value;
					this.SendPropertyChanged("RepairLEVEL");
					this.OnRepairLEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckRE", DbType="Bit NOT NULL")]
		public bool CheckRE
		{
			get
			{
				return this._CheckRE;
			}
			set
			{
				if ((this._CheckRE != value))
				{
					this.OnCheckREChanging(value);
					this.SendPropertyChanging();
					this._CheckRE = value;
					this.SendPropertyChanged("CheckRE");
					this.OnCheckREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REreportID", DbType="Int NOT NULL")]
		public int REreportID
		{
			get
			{
				return this._REreportID;
			}
			set
			{
				if ((this._REreportID != value))
				{
					this.OnREreportIDChanging(value);
					this.SendPropertyChanging();
					this._REreportID = value;
					this.SendPropertyChanged("REreportID");
					this.OnREreportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterielID", DbType="Int NOT NULL")]
		public int MaterielID
		{
			get
			{
				return this._MaterielID;
			}
			set
			{
				if ((this._MaterielID != value))
				{
					this.OnMaterielIDChanging(value);
					this.SendPropertyChanging();
					this._MaterielID = value;
					this.SendPropertyChanged("MaterielID");
					this.OnMaterielIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationslipID", DbType="Int NOT NULL")]
		public int ConfirmationslipID
		{
			get
			{
				return this._ConfirmationslipID;
			}
			set
			{
				if ((this._ConfirmationslipID != value))
				{
					this.OnConfirmationslipIDChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationslipID = value;
					this.SendPropertyChanged("ConfirmationslipID");
					this.OnConfirmationslipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallcontrolID", DbType="Int NOT NULL")]
		public int InstallcontrolID
		{
			get
			{
				return this._InstallcontrolID;
			}
			set
			{
				if ((this._InstallcontrolID != value))
				{
					this.OnInstallcontrolIDChanging(value);
					this.SendPropertyChanging();
					this._InstallcontrolID = value;
					this.SendPropertyChanged("InstallcontrolID");
					this.OnInstallcontrolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalcheckID", DbType="Int NOT NULL")]
		public int FinalcheckID
		{
			get
			{
				return this._FinalcheckID;
			}
			set
			{
				if ((this._FinalcheckID != value))
				{
					this.OnFinalcheckIDChanging(value);
					this.SendPropertyChanging();
					this._FinalcheckID = value;
					this.SendPropertyChanged("FinalcheckID");
					this.OnFinalcheckIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogisticsID", DbType="Int NOT NULL")]
		public int LogisticsID
		{
			get
			{
				return this._LogisticsID;
			}
			set
			{
				if ((this._LogisticsID != value))
				{
					this.OnLogisticsIDChanging(value);
					this.SendPropertyChanging();
					this._LogisticsID = value;
					this.SendPropertyChanged("LogisticsID");
					this.OnLogisticsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comingback_repairelog", Storage="_comingback", ThisKey="ComingbackID", OtherKey="ComingbackID", IsForeignKey=true)]
		public comingback comingback
		{
			get
			{
				return this._comingback.Entity;
			}
			set
			{
				comingback previousValue = this._comingback.Entity;
				if (((previousValue != value) 
							|| (this._comingback.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._comingback.Entity = null;
						previousValue.repairelog.Remove(this);
					}
					this._comingback.Entity = value;
					if ((value != null))
					{
						value.repairelog.Add(this);
						this._ComingbackID = value.ComingbackID;
					}
					else
					{
						this._ComingbackID = default(int);
					}
					this.SendPropertyChanged("comingback");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="repaireinfo_repairelog", Storage="_repaireinfo", ThisKey="RepaireplanID", OtherKey="RepaireplanID", IsForeignKey=true)]
		public repaireinfo repaireinfo
		{
			get
			{
				return this._repaireinfo.Entity;
			}
			set
			{
				repaireinfo previousValue = this._repaireinfo.Entity;
				if (((previousValue != value) 
							|| (this._repaireinfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._repaireinfo.Entity = null;
						previousValue.repairelog.Remove(this);
					}
					this._repaireinfo.Entity = value;
					if ((value != null))
					{
						value.repairelog.Add(this);
						this._RepaireplanID = value.RepaireplanID;
					}
					else
					{
						this._RepaireplanID = default(int);
					}
					this.SendPropertyChanged("repaireinfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uselog_repairelog", Storage="_uselog", ThisKey="UseID", OtherKey="UseID", IsForeignKey=true)]
		public uselog uselog
		{
			get
			{
				return this._uselog.Entity;
			}
			set
			{
				uselog previousValue = this._uselog.Entity;
				if (((previousValue != value) 
							|| (this._uselog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._uselog.Entity = null;
						previousValue.repairelog.Remove(this);
					}
					this._uselog.Entity = value;
					if ((value != null))
					{
						value.repairelog.Add(this);
						this._UseID = value.UseID;
					}
					else
					{
						this._UseID = default(int);
					}
					this.SendPropertyChanged("uselog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.riginfo")]
	public partial class riginfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RigSEQUENCE;
		
		private int _RigID;
		
		private string _RigNAME;
		
		private string _RigLOCATION;
		
		private EntitySet<jobinfo> _jobinfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRigSEQUENCEChanging(int value);
    partial void OnRigSEQUENCEChanged();
    partial void OnRigIDChanging(int value);
    partial void OnRigIDChanged();
    partial void OnRigNAMEChanging(string value);
    partial void OnRigNAMEChanged();
    partial void OnRigLOCATIONChanging(string value);
    partial void OnRigLOCATIONChanged();
    #endregion
		
		public riginfo()
		{
			this._jobinfo = new EntitySet<jobinfo>(new Action<jobinfo>(this.attach_jobinfo), new Action<jobinfo>(this.detach_jobinfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigSEQUENCE", DbType="Int NOT NULL")]
		public int RigSEQUENCE
		{
			get
			{
				return this._RigSEQUENCE;
			}
			set
			{
				if ((this._RigSEQUENCE != value))
				{
					this.OnRigSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._RigSEQUENCE = value;
					this.SendPropertyChanged("RigSEQUENCE");
					this.OnRigSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RigID
		{
			get
			{
				return this._RigID;
			}
			set
			{
				if ((this._RigID != value))
				{
					this.OnRigIDChanging(value);
					this.SendPropertyChanging();
					this._RigID = value;
					this.SendPropertyChanged("RigID");
					this.OnRigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigNAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string RigNAME
		{
			get
			{
				return this._RigNAME;
			}
			set
			{
				if ((this._RigNAME != value))
				{
					this.OnRigNAMEChanging(value);
					this.SendPropertyChanging();
					this._RigNAME = value;
					this.SendPropertyChanged("RigNAME");
					this.OnRigNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigLOCATION", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string RigLOCATION
		{
			get
			{
				return this._RigLOCATION;
			}
			set
			{
				if ((this._RigLOCATION != value))
				{
					this.OnRigLOCATIONChanging(value);
					this.SendPropertyChanging();
					this._RigLOCATION = value;
					this.SendPropertyChanged("RigLOCATION");
					this.OnRigLOCATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="riginfo_jobinfo", Storage="_jobinfo", ThisKey="RigID", OtherKey="RigID")]
		public EntitySet<jobinfo> jobinfo
		{
			get
			{
				return this._jobinfo;
			}
			set
			{
				this._jobinfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jobinfo(jobinfo entity)
		{
			this.SendPropertyChanging();
			entity.riginfo = this;
		}
		
		private void detach_jobinfo(jobinfo entity)
		{
			this.SendPropertyChanging();
			entity.riginfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.toolinginfo")]
	public partial class toolinginfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ToolingSEQUENCE;
		
		private decimal _ToolingID;
		
		private string _ToolingNAME;
		
		private string _ToolingSIZE;
		
		private EntitySet<toolinglist> _toolinglist;
		
		private EntitySet<toolinglist> _toolinglist1;
		
		private EntitySet<toolinglist> _toolinglist2;
		
		private EntitySet<toolinglist> _toolinglist3;
		
		private EntitySet<toolinglist> _toolinglist4;
		
		private EntitySet<toolinglist> _toolinglist5;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnToolingSEQUENCEChanging(int value);
    partial void OnToolingSEQUENCEChanged();
    partial void OnToolingIDChanging(decimal value);
    partial void OnToolingIDChanged();
    partial void OnToolingNAMEChanging(string value);
    partial void OnToolingNAMEChanged();
    partial void OnToolingSIZEChanging(string value);
    partial void OnToolingSIZEChanged();
    #endregion
		
		public toolinginfo()
		{
			this._toolinglist = new EntitySet<toolinglist>(new Action<toolinglist>(this.attach_toolinglist), new Action<toolinglist>(this.detach_toolinglist));
			this._toolinglist1 = new EntitySet<toolinglist>(new Action<toolinglist>(this.attach_toolinglist1), new Action<toolinglist>(this.detach_toolinglist1));
			this._toolinglist2 = new EntitySet<toolinglist>(new Action<toolinglist>(this.attach_toolinglist2), new Action<toolinglist>(this.detach_toolinglist2));
			this._toolinglist3 = new EntitySet<toolinglist>(new Action<toolinglist>(this.attach_toolinglist3), new Action<toolinglist>(this.detach_toolinglist3));
			this._toolinglist4 = new EntitySet<toolinglist>(new Action<toolinglist>(this.attach_toolinglist4), new Action<toolinglist>(this.detach_toolinglist4));
			this._toolinglist5 = new EntitySet<toolinglist>(new Action<toolinglist>(this.attach_toolinglist5), new Action<toolinglist>(this.detach_toolinglist5));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToolingSEQUENCE", DbType="Int NOT NULL")]
		public int ToolingSEQUENCE
		{
			get
			{
				return this._ToolingSEQUENCE;
			}
			set
			{
				if ((this._ToolingSEQUENCE != value))
				{
					this.OnToolingSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._ToolingSEQUENCE = value;
					this.SendPropertyChanged("ToolingSEQUENCE");
					this.OnToolingSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToolingID", DbType="Decimal(8,0) NOT NULL", IsPrimaryKey=true)]
		public decimal ToolingID
		{
			get
			{
				return this._ToolingID;
			}
			set
			{
				if ((this._ToolingID != value))
				{
					this.OnToolingIDChanging(value);
					this.SendPropertyChanging();
					this._ToolingID = value;
					this.SendPropertyChanged("ToolingID");
					this.OnToolingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToolingNAME", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ToolingNAME
		{
			get
			{
				return this._ToolingNAME;
			}
			set
			{
				if ((this._ToolingNAME != value))
				{
					this.OnToolingNAMEChanging(value);
					this.SendPropertyChanging();
					this._ToolingNAME = value;
					this.SendPropertyChanged("ToolingNAME");
					this.OnToolingNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToolingSIZE", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ToolingSIZE
		{
			get
			{
				return this._ToolingSIZE;
			}
			set
			{
				if ((this._ToolingSIZE != value))
				{
					this.OnToolingSIZEChanging(value);
					this.SendPropertyChanging();
					this._ToolingSIZE = value;
					this.SendPropertyChanged("ToolingSIZE");
					this.OnToolingSIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist", Storage="_toolinglist", ThisKey="ToolingID", OtherKey="Tooling1")]
		public EntitySet<toolinglist> toolinglist
		{
			get
			{
				return this._toolinglist;
			}
			set
			{
				this._toolinglist.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist1", Storage="_toolinglist1", ThisKey="ToolingID", OtherKey="Tooling2")]
		public EntitySet<toolinglist> toolinglist1
		{
			get
			{
				return this._toolinglist1;
			}
			set
			{
				this._toolinglist1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist2", Storage="_toolinglist2", ThisKey="ToolingID", OtherKey="Tooling3")]
		public EntitySet<toolinglist> toolinglist2
		{
			get
			{
				return this._toolinglist2;
			}
			set
			{
				this._toolinglist2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist3", Storage="_toolinglist3", ThisKey="ToolingID", OtherKey="Tooling4")]
		public EntitySet<toolinglist> toolinglist3
		{
			get
			{
				return this._toolinglist3;
			}
			set
			{
				this._toolinglist3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist4", Storage="_toolinglist4", ThisKey="ToolingID", OtherKey="Tooling5")]
		public EntitySet<toolinglist> toolinglist4
		{
			get
			{
				return this._toolinglist4;
			}
			set
			{
				this._toolinglist4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist5", Storage="_toolinglist5", ThisKey="ToolingID", OtherKey="Tooling6")]
		public EntitySet<toolinglist> toolinglist5
		{
			get
			{
				return this._toolinglist5;
			}
			set
			{
				this._toolinglist5.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_toolinglist(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo = this;
		}
		
		private void detach_toolinglist(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo = null;
		}
		
		private void attach_toolinglist1(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo1 = this;
		}
		
		private void detach_toolinglist1(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo1 = null;
		}
		
		private void attach_toolinglist2(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo2 = this;
		}
		
		private void detach_toolinglist2(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo2 = null;
		}
		
		private void attach_toolinglist3(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo3 = this;
		}
		
		private void detach_toolinglist3(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo3 = null;
		}
		
		private void attach_toolinglist4(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo4 = this;
		}
		
		private void detach_toolinglist4(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo4 = null;
		}
		
		private void attach_toolinglist5(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo5 = this;
		}
		
		private void detach_toolinglist5(toolinglist entity)
		{
			this.SendPropertyChanging();
			entity.toolinginfo5 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.toolinglist")]
	public partial class toolinglist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TListSEQUENCE;
		
		private int _BHA;
		
		private decimal _Tooling1;
		
		private decimal _Tooling2;
		
		private decimal _Tooling3;
		
		private decimal _Tooling4;
		
		private decimal _Tooling5;
		
		private decimal _Tooling6;
		
		private EntitySet<uselog> _uselog;
		
		private EntityRef<toolinginfo> _toolinginfo;
		
		private EntityRef<toolinginfo> _toolinginfo1;
		
		private EntityRef<toolinginfo> _toolinginfo2;
		
		private EntityRef<toolinginfo> _toolinginfo3;
		
		private EntityRef<toolinginfo> _toolinginfo4;
		
		private EntityRef<toolinginfo> _toolinginfo5;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTListSEQUENCEChanging(int value);
    partial void OnTListSEQUENCEChanged();
    partial void OnBHAChanging(int value);
    partial void OnBHAChanged();
    partial void OnTooling1Changing(decimal value);
    partial void OnTooling1Changed();
    partial void OnTooling2Changing(decimal value);
    partial void OnTooling2Changed();
    partial void OnTooling3Changing(decimal value);
    partial void OnTooling3Changed();
    partial void OnTooling4Changing(decimal value);
    partial void OnTooling4Changed();
    partial void OnTooling5Changing(decimal value);
    partial void OnTooling5Changed();
    partial void OnTooling6Changing(decimal value);
    partial void OnTooling6Changed();
    #endregion
		
		public toolinglist()
		{
			this._uselog = new EntitySet<uselog>(new Action<uselog>(this.attach_uselog), new Action<uselog>(this.detach_uselog));
			this._toolinginfo = default(EntityRef<toolinginfo>);
			this._toolinginfo1 = default(EntityRef<toolinginfo>);
			this._toolinginfo2 = default(EntityRef<toolinginfo>);
			this._toolinginfo3 = default(EntityRef<toolinginfo>);
			this._toolinginfo4 = default(EntityRef<toolinginfo>);
			this._toolinginfo5 = default(EntityRef<toolinginfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TListSEQUENCE", DbType="Int NOT NULL")]
		public int TListSEQUENCE
		{
			get
			{
				return this._TListSEQUENCE;
			}
			set
			{
				if ((this._TListSEQUENCE != value))
				{
					this.OnTListSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._TListSEQUENCE = value;
					this.SendPropertyChanged("TListSEQUENCE");
					this.OnTListSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BHA
		{
			get
			{
				return this._BHA;
			}
			set
			{
				if ((this._BHA != value))
				{
					this.OnBHAChanging(value);
					this.SendPropertyChanging();
					this._BHA = value;
					this.SendPropertyChanged("BHA");
					this.OnBHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tooling1", DbType="Decimal(8,0) NOT NULL")]
		public decimal Tooling1
		{
			get
			{
				return this._Tooling1;
			}
			set
			{
				if ((this._Tooling1 != value))
				{
					if (this._toolinginfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTooling1Changing(value);
					this.SendPropertyChanging();
					this._Tooling1 = value;
					this.SendPropertyChanged("Tooling1");
					this.OnTooling1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tooling2", DbType="Decimal(8,0) NOT NULL")]
		public decimal Tooling2
		{
			get
			{
				return this._Tooling2;
			}
			set
			{
				if ((this._Tooling2 != value))
				{
					if (this._toolinginfo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTooling2Changing(value);
					this.SendPropertyChanging();
					this._Tooling2 = value;
					this.SendPropertyChanged("Tooling2");
					this.OnTooling2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tooling3", DbType="Decimal(8,0) NOT NULL")]
		public decimal Tooling3
		{
			get
			{
				return this._Tooling3;
			}
			set
			{
				if ((this._Tooling3 != value))
				{
					if (this._toolinginfo2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTooling3Changing(value);
					this.SendPropertyChanging();
					this._Tooling3 = value;
					this.SendPropertyChanged("Tooling3");
					this.OnTooling3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tooling4", DbType="Decimal(8,0) NOT NULL")]
		public decimal Tooling4
		{
			get
			{
				return this._Tooling4;
			}
			set
			{
				if ((this._Tooling4 != value))
				{
					if (this._toolinginfo3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTooling4Changing(value);
					this.SendPropertyChanging();
					this._Tooling4 = value;
					this.SendPropertyChanged("Tooling4");
					this.OnTooling4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tooling5", DbType="Decimal(8,0) NOT NULL")]
		public decimal Tooling5
		{
			get
			{
				return this._Tooling5;
			}
			set
			{
				if ((this._Tooling5 != value))
				{
					if (this._toolinginfo4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTooling5Changing(value);
					this.SendPropertyChanging();
					this._Tooling5 = value;
					this.SendPropertyChanged("Tooling5");
					this.OnTooling5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tooling6", DbType="Decimal(8,0) NOT NULL")]
		public decimal Tooling6
		{
			get
			{
				return this._Tooling6;
			}
			set
			{
				if ((this._Tooling6 != value))
				{
					if (this._toolinginfo5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTooling6Changing(value);
					this.SendPropertyChanging();
					this._Tooling6 = value;
					this.SendPropertyChanged("Tooling6");
					this.OnTooling6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinglist_uselog", Storage="_uselog", ThisKey="BHA", OtherKey="BHA")]
		public EntitySet<uselog> uselog
		{
			get
			{
				return this._uselog;
			}
			set
			{
				this._uselog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist", Storage="_toolinginfo", ThisKey="Tooling1", OtherKey="ToolingID", IsForeignKey=true)]
		public toolinginfo toolinginfo
		{
			get
			{
				return this._toolinginfo.Entity;
			}
			set
			{
				toolinginfo previousValue = this._toolinginfo.Entity;
				if (((previousValue != value) 
							|| (this._toolinginfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._toolinginfo.Entity = null;
						previousValue.toolinglist.Remove(this);
					}
					this._toolinginfo.Entity = value;
					if ((value != null))
					{
						value.toolinglist.Add(this);
						this._Tooling1 = value.ToolingID;
					}
					else
					{
						this._Tooling1 = default(decimal);
					}
					this.SendPropertyChanged("toolinginfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist1", Storage="_toolinginfo1", ThisKey="Tooling2", OtherKey="ToolingID", IsForeignKey=true)]
		public toolinginfo toolinginfo1
		{
			get
			{
				return this._toolinginfo1.Entity;
			}
			set
			{
				toolinginfo previousValue = this._toolinginfo1.Entity;
				if (((previousValue != value) 
							|| (this._toolinginfo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._toolinginfo1.Entity = null;
						previousValue.toolinglist1.Remove(this);
					}
					this._toolinginfo1.Entity = value;
					if ((value != null))
					{
						value.toolinglist1.Add(this);
						this._Tooling2 = value.ToolingID;
					}
					else
					{
						this._Tooling2 = default(decimal);
					}
					this.SendPropertyChanged("toolinginfo1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist2", Storage="_toolinginfo2", ThisKey="Tooling3", OtherKey="ToolingID", IsForeignKey=true)]
		public toolinginfo toolinginfo2
		{
			get
			{
				return this._toolinginfo2.Entity;
			}
			set
			{
				toolinginfo previousValue = this._toolinginfo2.Entity;
				if (((previousValue != value) 
							|| (this._toolinginfo2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._toolinginfo2.Entity = null;
						previousValue.toolinglist2.Remove(this);
					}
					this._toolinginfo2.Entity = value;
					if ((value != null))
					{
						value.toolinglist2.Add(this);
						this._Tooling3 = value.ToolingID;
					}
					else
					{
						this._Tooling3 = default(decimal);
					}
					this.SendPropertyChanged("toolinginfo2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist3", Storage="_toolinginfo3", ThisKey="Tooling4", OtherKey="ToolingID", IsForeignKey=true)]
		public toolinginfo toolinginfo3
		{
			get
			{
				return this._toolinginfo3.Entity;
			}
			set
			{
				toolinginfo previousValue = this._toolinginfo3.Entity;
				if (((previousValue != value) 
							|| (this._toolinginfo3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._toolinginfo3.Entity = null;
						previousValue.toolinglist3.Remove(this);
					}
					this._toolinginfo3.Entity = value;
					if ((value != null))
					{
						value.toolinglist3.Add(this);
						this._Tooling4 = value.ToolingID;
					}
					else
					{
						this._Tooling4 = default(decimal);
					}
					this.SendPropertyChanged("toolinginfo3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist4", Storage="_toolinginfo4", ThisKey="Tooling5", OtherKey="ToolingID", IsForeignKey=true)]
		public toolinginfo toolinginfo4
		{
			get
			{
				return this._toolinginfo4.Entity;
			}
			set
			{
				toolinginfo previousValue = this._toolinginfo4.Entity;
				if (((previousValue != value) 
							|| (this._toolinginfo4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._toolinginfo4.Entity = null;
						previousValue.toolinglist4.Remove(this);
					}
					this._toolinginfo4.Entity = value;
					if ((value != null))
					{
						value.toolinglist4.Add(this);
						this._Tooling5 = value.ToolingID;
					}
					else
					{
						this._Tooling5 = default(decimal);
					}
					this.SendPropertyChanged("toolinginfo4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinginfo_toolinglist5", Storage="_toolinginfo5", ThisKey="Tooling6", OtherKey="ToolingID", IsForeignKey=true)]
		public toolinginfo toolinginfo5
		{
			get
			{
				return this._toolinginfo5.Entity;
			}
			set
			{
				toolinginfo previousValue = this._toolinginfo5.Entity;
				if (((previousValue != value) 
							|| (this._toolinginfo5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._toolinginfo5.Entity = null;
						previousValue.toolinglist5.Remove(this);
					}
					this._toolinginfo5.Entity = value;
					if ((value != null))
					{
						value.toolinglist5.Add(this);
						this._Tooling6 = value.ToolingID;
					}
					else
					{
						this._Tooling6 = default(decimal);
					}
					this.SendPropertyChanged("toolinginfo5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_uselog(uselog entity)
		{
			this.SendPropertyChanging();
			entity.toolinglist = this;
		}
		
		private void detach_uselog(uselog entity)
		{
			this.SendPropertyChanging();
			entity.toolinglist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.uselog")]
	public partial class uselog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ULogSEQUENCE;
		
		private int _UseID;
		
		private int _UJobID;
		
		private System.DateTime _DateIN;
		
		private System.TimeSpan _TimeIN;
		
		private System.DateTime _DateOUT;
		
		private System.TimeSpan _TimeOUT;
		
		private decimal _Circulating;
		
		private decimal _Drilling;
		
		private decimal _BRT;
		
		private decimal _DepthIN;
		
		private decimal _DepthOUT;
		
		private decimal _DistanceDrilled;
		
		private int _BHA;
		
		private int _EnvironmentID;
		
		private EntitySet<repairelog> _repairelog;
		
		private EntityRef<environmentlist> _environmentlist;
		
		private EntityRef<jobinfo> _jobinfo;
		
		private EntityRef<toolinglist> _toolinglist;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnULogSEQUENCEChanging(int value);
    partial void OnULogSEQUENCEChanged();
    partial void OnUseIDChanging(int value);
    partial void OnUseIDChanged();
    partial void OnUJobIDChanging(int value);
    partial void OnUJobIDChanged();
    partial void OnDateINChanging(System.DateTime value);
    partial void OnDateINChanged();
    partial void OnTimeINChanging(System.TimeSpan value);
    partial void OnTimeINChanged();
    partial void OnDateOUTChanging(System.DateTime value);
    partial void OnDateOUTChanged();
    partial void OnTimeOUTChanging(System.TimeSpan value);
    partial void OnTimeOUTChanged();
    partial void OnCirculatingChanging(decimal value);
    partial void OnCirculatingChanged();
    partial void OnDrillingChanging(decimal value);
    partial void OnDrillingChanged();
    partial void OnBRTChanging(decimal value);
    partial void OnBRTChanged();
    partial void OnDepthINChanging(decimal value);
    partial void OnDepthINChanged();
    partial void OnDepthOUTChanging(decimal value);
    partial void OnDepthOUTChanged();
    partial void OnDistanceDrilledChanging(decimal value);
    partial void OnDistanceDrilledChanged();
    partial void OnBHAChanging(int value);
    partial void OnBHAChanged();
    partial void OnEnvironmentIDChanging(int value);
    partial void OnEnvironmentIDChanged();
    #endregion
		
		public uselog()
		{
			this._repairelog = new EntitySet<repairelog>(new Action<repairelog>(this.attach_repairelog), new Action<repairelog>(this.detach_repairelog));
			this._environmentlist = default(EntityRef<environmentlist>);
			this._jobinfo = default(EntityRef<jobinfo>);
			this._toolinglist = default(EntityRef<toolinglist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ULogSEQUENCE", DbType="Int NOT NULL")]
		public int ULogSEQUENCE
		{
			get
			{
				return this._ULogSEQUENCE;
			}
			set
			{
				if ((this._ULogSEQUENCE != value))
				{
					this.OnULogSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._ULogSEQUENCE = value;
					this.SendPropertyChanged("ULogSEQUENCE");
					this.OnULogSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UseID
		{
			get
			{
				return this._UseID;
			}
			set
			{
				if ((this._UseID != value))
				{
					this.OnUseIDChanging(value);
					this.SendPropertyChanging();
					this._UseID = value;
					this.SendPropertyChanged("UseID");
					this.OnUseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UJobID", DbType="Int NOT NULL")]
		public int UJobID
		{
			get
			{
				return this._UJobID;
			}
			set
			{
				if ((this._UJobID != value))
				{
					if (this._jobinfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUJobIDChanging(value);
					this.SendPropertyChanging();
					this._UJobID = value;
					this.SendPropertyChanged("UJobID");
					this.OnUJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIN", DbType="Date NOT NULL")]
		public System.DateTime DateIN
		{
			get
			{
				return this._DateIN;
			}
			set
			{
				if ((this._DateIN != value))
				{
					this.OnDateINChanging(value);
					this.SendPropertyChanging();
					this._DateIN = value;
					this.SendPropertyChanged("DateIN");
					this.OnDateINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIN", DbType="Time NOT NULL")]
		public System.TimeSpan TimeIN
		{
			get
			{
				return this._TimeIN;
			}
			set
			{
				if ((this._TimeIN != value))
				{
					this.OnTimeINChanging(value);
					this.SendPropertyChanging();
					this._TimeIN = value;
					this.SendPropertyChanged("TimeIN");
					this.OnTimeINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOUT", DbType="Date NOT NULL")]
		public System.DateTime DateOUT
		{
			get
			{
				return this._DateOUT;
			}
			set
			{
				if ((this._DateOUT != value))
				{
					this.OnDateOUTChanging(value);
					this.SendPropertyChanging();
					this._DateOUT = value;
					this.SendPropertyChanged("DateOUT");
					this.OnDateOUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOUT", DbType="Time NOT NULL")]
		public System.TimeSpan TimeOUT
		{
			get
			{
				return this._TimeOUT;
			}
			set
			{
				if ((this._TimeOUT != value))
				{
					this.OnTimeOUTChanging(value);
					this.SendPropertyChanging();
					this._TimeOUT = value;
					this.SendPropertyChanged("TimeOUT");
					this.OnTimeOUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Circulating", DbType="Decimal(10,1) NOT NULL")]
		public decimal Circulating
		{
			get
			{
				return this._Circulating;
			}
			set
			{
				if ((this._Circulating != value))
				{
					this.OnCirculatingChanging(value);
					this.SendPropertyChanging();
					this._Circulating = value;
					this.SendPropertyChanged("Circulating");
					this.OnCirculatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drilling", DbType="Decimal(10,1) NOT NULL")]
		public decimal Drilling
		{
			get
			{
				return this._Drilling;
			}
			set
			{
				if ((this._Drilling != value))
				{
					this.OnDrillingChanging(value);
					this.SendPropertyChanging();
					this._Drilling = value;
					this.SendPropertyChanged("Drilling");
					this.OnDrillingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRT", DbType="Decimal(10,1) NOT NULL")]
		public decimal BRT
		{
			get
			{
				return this._BRT;
			}
			set
			{
				if ((this._BRT != value))
				{
					this.OnBRTChanging(value);
					this.SendPropertyChanging();
					this._BRT = value;
					this.SendPropertyChanged("BRT");
					this.OnBRTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepthIN", DbType="Decimal(6,2) NOT NULL")]
		public decimal DepthIN
		{
			get
			{
				return this._DepthIN;
			}
			set
			{
				if ((this._DepthIN != value))
				{
					this.OnDepthINChanging(value);
					this.SendPropertyChanging();
					this._DepthIN = value;
					this.SendPropertyChanged("DepthIN");
					this.OnDepthINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepthOUT", DbType="Decimal(6,2) NOT NULL")]
		public decimal DepthOUT
		{
			get
			{
				return this._DepthOUT;
			}
			set
			{
				if ((this._DepthOUT != value))
				{
					this.OnDepthOUTChanging(value);
					this.SendPropertyChanging();
					this._DepthOUT = value;
					this.SendPropertyChanged("DepthOUT");
					this.OnDepthOUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceDrilled", DbType="Decimal(6,2) NOT NULL")]
		public decimal DistanceDrilled
		{
			get
			{
				return this._DistanceDrilled;
			}
			set
			{
				if ((this._DistanceDrilled != value))
				{
					this.OnDistanceDrilledChanging(value);
					this.SendPropertyChanging();
					this._DistanceDrilled = value;
					this.SendPropertyChanged("DistanceDrilled");
					this.OnDistanceDrilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHA", DbType="Int NOT NULL")]
		public int BHA
		{
			get
			{
				return this._BHA;
			}
			set
			{
				if ((this._BHA != value))
				{
					if (this._toolinglist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBHAChanging(value);
					this.SendPropertyChanging();
					this._BHA = value;
					this.SendPropertyChanged("BHA");
					this.OnBHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentID", DbType="Int NOT NULL")]
		public int EnvironmentID
		{
			get
			{
				return this._EnvironmentID;
			}
			set
			{
				if ((this._EnvironmentID != value))
				{
					if (this._environmentlist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnvironmentIDChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentID = value;
					this.SendPropertyChanged("EnvironmentID");
					this.OnEnvironmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uselog_repairelog", Storage="_repairelog", ThisKey="UseID", OtherKey="UseID")]
		public EntitySet<repairelog> repairelog
		{
			get
			{
				return this._repairelog;
			}
			set
			{
				this._repairelog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="environmentlist_uselog", Storage="_environmentlist", ThisKey="EnvironmentID", OtherKey="EnvironmentID", IsForeignKey=true)]
		public environmentlist environmentlist
		{
			get
			{
				return this._environmentlist.Entity;
			}
			set
			{
				environmentlist previousValue = this._environmentlist.Entity;
				if (((previousValue != value) 
							|| (this._environmentlist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._environmentlist.Entity = null;
						previousValue.uselog.Remove(this);
					}
					this._environmentlist.Entity = value;
					if ((value != null))
					{
						value.uselog.Add(this);
						this._EnvironmentID = value.EnvironmentID;
					}
					else
					{
						this._EnvironmentID = default(int);
					}
					this.SendPropertyChanged("environmentlist");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jobinfo_uselog", Storage="_jobinfo", ThisKey="UJobID", OtherKey="UJobID", IsForeignKey=true)]
		public jobinfo jobinfo
		{
			get
			{
				return this._jobinfo.Entity;
			}
			set
			{
				jobinfo previousValue = this._jobinfo.Entity;
				if (((previousValue != value) 
							|| (this._jobinfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jobinfo.Entity = null;
						previousValue.uselog.Remove(this);
					}
					this._jobinfo.Entity = value;
					if ((value != null))
					{
						value.uselog.Add(this);
						this._UJobID = value.UJobID;
					}
					else
					{
						this._UJobID = default(int);
					}
					this.SendPropertyChanged("jobinfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="toolinglist_uselog", Storage="_toolinglist", ThisKey="BHA", OtherKey="BHA", IsForeignKey=true)]
		public toolinglist toolinglist
		{
			get
			{
				return this._toolinglist.Entity;
			}
			set
			{
				toolinglist previousValue = this._toolinglist.Entity;
				if (((previousValue != value) 
							|| (this._toolinglist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._toolinglist.Entity = null;
						previousValue.uselog.Remove(this);
					}
					this._toolinglist.Entity = value;
					if ((value != null))
					{
						value.uselog.Add(this);
						this._BHA = value.BHA;
					}
					else
					{
						this._BHA = default(int);
					}
					this.SendPropertyChanged("toolinglist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_repairelog(repairelog entity)
		{
			this.SendPropertyChanging();
			entity.uselog = this;
		}
		
		private void detach_repairelog(repairelog entity)
		{
			this.SendPropertyChanging();
			entity.uselog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userinfo")]
	public partial class userinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserSEQUENCE;
		
		private int _UserID;
		
		private string _UserPASS;
		
		private string _UserNAME;
		
		private int _URoleID;
		
		private EntitySet<engineerinfo> _engineerinfo;
		
		private EntityRef<userrole> _userrole;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserSEQUENCEChanging(int value);
    partial void OnUserSEQUENCEChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserPASSChanging(string value);
    partial void OnUserPASSChanged();
    partial void OnUserNAMEChanging(string value);
    partial void OnUserNAMEChanged();
    partial void OnURoleIDChanging(int value);
    partial void OnURoleIDChanged();
    #endregion
		
		public userinfo()
		{
			this._engineerinfo = new EntitySet<engineerinfo>(new Action<engineerinfo>(this.attach_engineerinfo), new Action<engineerinfo>(this.detach_engineerinfo));
			this._userrole = default(EntityRef<userrole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSEQUENCE", DbType="Int NOT NULL")]
		public int UserSEQUENCE
		{
			get
			{
				return this._UserSEQUENCE;
			}
			set
			{
				if ((this._UserSEQUENCE != value))
				{
					this.OnUserSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._UserSEQUENCE = value;
					this.SendPropertyChanged("UserSEQUENCE");
					this.OnUserSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPASS", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserPASS
		{
			get
			{
				return this._UserPASS;
			}
			set
			{
				if ((this._UserPASS != value))
				{
					this.OnUserPASSChanging(value);
					this.SendPropertyChanging();
					this._UserPASS = value;
					this.SendPropertyChanged("UserPASS");
					this.OnUserPASSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserNAME
		{
			get
			{
				return this._UserNAME;
			}
			set
			{
				if ((this._UserNAME != value))
				{
					this.OnUserNAMEChanging(value);
					this.SendPropertyChanging();
					this._UserNAME = value;
					this.SendPropertyChanged("UserNAME");
					this.OnUserNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URoleID", DbType="Int NOT NULL")]
		public int URoleID
		{
			get
			{
				return this._URoleID;
			}
			set
			{
				if ((this._URoleID != value))
				{
					if (this._userrole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnURoleIDChanging(value);
					this.SendPropertyChanging();
					this._URoleID = value;
					this.SendPropertyChanged("URoleID");
					this.OnURoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="userinfo_engineerinfo", Storage="_engineerinfo", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<engineerinfo> engineerinfo
		{
			get
			{
				return this._engineerinfo;
			}
			set
			{
				this._engineerinfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="userrole_userinfo", Storage="_userrole", ThisKey="URoleID", OtherKey="URoleID", IsForeignKey=true)]
		public userrole userrole
		{
			get
			{
				return this._userrole.Entity;
			}
			set
			{
				userrole previousValue = this._userrole.Entity;
				if (((previousValue != value) 
							|| (this._userrole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._userrole.Entity = null;
						previousValue.userinfo.Remove(this);
					}
					this._userrole.Entity = value;
					if ((value != null))
					{
						value.userinfo.Add(this);
						this._URoleID = value.URoleID;
					}
					else
					{
						this._URoleID = default(int);
					}
					this.SendPropertyChanged("userrole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_engineerinfo(engineerinfo entity)
		{
			this.SendPropertyChanging();
			entity.userinfo = this;
		}
		
		private void detach_engineerinfo(engineerinfo entity)
		{
			this.SendPropertyChanging();
			entity.userinfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userrole")]
	public partial class userrole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _URoleSEQUENCE;
		
		private int _URoleID;
		
		private string _URoleNAME;
		
		private EntitySet<userinfo> _userinfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnURoleSEQUENCEChanging(int value);
    partial void OnURoleSEQUENCEChanged();
    partial void OnURoleIDChanging(int value);
    partial void OnURoleIDChanged();
    partial void OnURoleNAMEChanging(string value);
    partial void OnURoleNAMEChanged();
    #endregion
		
		public userrole()
		{
			this._userinfo = new EntitySet<userinfo>(new Action<userinfo>(this.attach_userinfo), new Action<userinfo>(this.detach_userinfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URoleSEQUENCE", DbType="Int NOT NULL")]
		public int URoleSEQUENCE
		{
			get
			{
				return this._URoleSEQUENCE;
			}
			set
			{
				if ((this._URoleSEQUENCE != value))
				{
					this.OnURoleSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._URoleSEQUENCE = value;
					this.SendPropertyChanged("URoleSEQUENCE");
					this.OnURoleSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int URoleID
		{
			get
			{
				return this._URoleID;
			}
			set
			{
				if ((this._URoleID != value))
				{
					this.OnURoleIDChanging(value);
					this.SendPropertyChanging();
					this._URoleID = value;
					this.SendPropertyChanged("URoleID");
					this.OnURoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URoleNAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string URoleNAME
		{
			get
			{
				return this._URoleNAME;
			}
			set
			{
				if ((this._URoleNAME != value))
				{
					this.OnURoleNAMEChanging(value);
					this.SendPropertyChanging();
					this._URoleNAME = value;
					this.SendPropertyChanged("URoleNAME");
					this.OnURoleNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="userrole_userinfo", Storage="_userinfo", ThisKey="URoleID", OtherKey="URoleID")]
		public EntitySet<userinfo> userinfo
		{
			get
			{
				return this._userinfo;
			}
			set
			{
				this._userinfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_userinfo(userinfo entity)
		{
			this.SendPropertyChanging();
			entity.userrole = this;
		}
		
		private void detach_userinfo(userinfo entity)
		{
			this.SendPropertyChanging();
			entity.userrole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wellinfo")]
	public partial class wellinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WellSEQUENCE;
		
		private int _WellID;
		
		private string _WellNAME;
		
		private string _WellLOCATION;
		
		private decimal _HoleSIZE;
		
		private decimal _RotatedDLS;
		
		private decimal _SandContent;
		
		private int _MaxRPM;
		
		private int _AvgRPM;
		
		private int _MaxPRESSURE;
		
		private int _MaxFLOWRATE;
		
		private int _AvgFLOWRATE;
		
		private int _MinFLOWRATE;
		
		private decimal _MaxINC;
		
		private decimal _MinINC;
		
		private string _MudType;
		
		private int _MudPH;
		
		private string _WaterOil;
		
		private EntitySet<jobinfo> _jobinfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWellSEQUENCEChanging(int value);
    partial void OnWellSEQUENCEChanged();
    partial void OnWellIDChanging(int value);
    partial void OnWellIDChanged();
    partial void OnWellNAMEChanging(string value);
    partial void OnWellNAMEChanged();
    partial void OnWellLOCATIONChanging(string value);
    partial void OnWellLOCATIONChanged();
    partial void OnHoleSIZEChanging(decimal value);
    partial void OnHoleSIZEChanged();
    partial void OnRotatedDLSChanging(decimal value);
    partial void OnRotatedDLSChanged();
    partial void OnSandContentChanging(decimal value);
    partial void OnSandContentChanged();
    partial void OnMaxRPMChanging(int value);
    partial void OnMaxRPMChanged();
    partial void OnAvgRPMChanging(int value);
    partial void OnAvgRPMChanged();
    partial void OnMaxPRESSUREChanging(int value);
    partial void OnMaxPRESSUREChanged();
    partial void OnMaxFLOWRATEChanging(int value);
    partial void OnMaxFLOWRATEChanged();
    partial void OnAvgFLOWRATEChanging(int value);
    partial void OnAvgFLOWRATEChanged();
    partial void OnMinFLOWRATEChanging(int value);
    partial void OnMinFLOWRATEChanged();
    partial void OnMaxINCChanging(decimal value);
    partial void OnMaxINCChanged();
    partial void OnMinINCChanging(decimal value);
    partial void OnMinINCChanged();
    partial void OnMudTypeChanging(string value);
    partial void OnMudTypeChanged();
    partial void OnMudPHChanging(int value);
    partial void OnMudPHChanged();
    partial void OnWaterOilChanging(string value);
    partial void OnWaterOilChanged();
    #endregion
		
		public wellinfo()
		{
			this._jobinfo = new EntitySet<jobinfo>(new Action<jobinfo>(this.attach_jobinfo), new Action<jobinfo>(this.detach_jobinfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WellSEQUENCE", DbType="Int NOT NULL")]
		public int WellSEQUENCE
		{
			get
			{
				return this._WellSEQUENCE;
			}
			set
			{
				if ((this._WellSEQUENCE != value))
				{
					this.OnWellSEQUENCEChanging(value);
					this.SendPropertyChanging();
					this._WellSEQUENCE = value;
					this.SendPropertyChanged("WellSEQUENCE");
					this.OnWellSEQUENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WellID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WellID
		{
			get
			{
				return this._WellID;
			}
			set
			{
				if ((this._WellID != value))
				{
					this.OnWellIDChanging(value);
					this.SendPropertyChanging();
					this._WellID = value;
					this.SendPropertyChanged("WellID");
					this.OnWellIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WellNAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string WellNAME
		{
			get
			{
				return this._WellNAME;
			}
			set
			{
				if ((this._WellNAME != value))
				{
					this.OnWellNAMEChanging(value);
					this.SendPropertyChanging();
					this._WellNAME = value;
					this.SendPropertyChanged("WellNAME");
					this.OnWellNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WellLOCATION", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string WellLOCATION
		{
			get
			{
				return this._WellLOCATION;
			}
			set
			{
				if ((this._WellLOCATION != value))
				{
					this.OnWellLOCATIONChanging(value);
					this.SendPropertyChanging();
					this._WellLOCATION = value;
					this.SendPropertyChanged("WellLOCATION");
					this.OnWellLOCATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoleSIZE", DbType="Decimal(3,2) NOT NULL")]
		public decimal HoleSIZE
		{
			get
			{
				return this._HoleSIZE;
			}
			set
			{
				if ((this._HoleSIZE != value))
				{
					this.OnHoleSIZEChanging(value);
					this.SendPropertyChanging();
					this._HoleSIZE = value;
					this.SendPropertyChanged("HoleSIZE");
					this.OnHoleSIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RotatedDLS", DbType="Decimal(3,2) NOT NULL")]
		public decimal RotatedDLS
		{
			get
			{
				return this._RotatedDLS;
			}
			set
			{
				if ((this._RotatedDLS != value))
				{
					this.OnRotatedDLSChanging(value);
					this.SendPropertyChanging();
					this._RotatedDLS = value;
					this.SendPropertyChanged("RotatedDLS");
					this.OnRotatedDLSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SandContent", DbType="Decimal(3,2) NOT NULL")]
		public decimal SandContent
		{
			get
			{
				return this._SandContent;
			}
			set
			{
				if ((this._SandContent != value))
				{
					this.OnSandContentChanging(value);
					this.SendPropertyChanging();
					this._SandContent = value;
					this.SendPropertyChanged("SandContent");
					this.OnSandContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRPM", DbType="Int NOT NULL")]
		public int MaxRPM
		{
			get
			{
				return this._MaxRPM;
			}
			set
			{
				if ((this._MaxRPM != value))
				{
					this.OnMaxRPMChanging(value);
					this.SendPropertyChanging();
					this._MaxRPM = value;
					this.SendPropertyChanged("MaxRPM");
					this.OnMaxRPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgRPM", DbType="Int NOT NULL")]
		public int AvgRPM
		{
			get
			{
				return this._AvgRPM;
			}
			set
			{
				if ((this._AvgRPM != value))
				{
					this.OnAvgRPMChanging(value);
					this.SendPropertyChanging();
					this._AvgRPM = value;
					this.SendPropertyChanged("AvgRPM");
					this.OnAvgRPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPRESSURE", DbType="Int NOT NULL")]
		public int MaxPRESSURE
		{
			get
			{
				return this._MaxPRESSURE;
			}
			set
			{
				if ((this._MaxPRESSURE != value))
				{
					this.OnMaxPRESSUREChanging(value);
					this.SendPropertyChanging();
					this._MaxPRESSURE = value;
					this.SendPropertyChanged("MaxPRESSURE");
					this.OnMaxPRESSUREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxFLOWRATE", DbType="Int NOT NULL")]
		public int MaxFLOWRATE
		{
			get
			{
				return this._MaxFLOWRATE;
			}
			set
			{
				if ((this._MaxFLOWRATE != value))
				{
					this.OnMaxFLOWRATEChanging(value);
					this.SendPropertyChanging();
					this._MaxFLOWRATE = value;
					this.SendPropertyChanged("MaxFLOWRATE");
					this.OnMaxFLOWRATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgFLOWRATE", DbType="Int NOT NULL")]
		public int AvgFLOWRATE
		{
			get
			{
				return this._AvgFLOWRATE;
			}
			set
			{
				if ((this._AvgFLOWRATE != value))
				{
					this.OnAvgFLOWRATEChanging(value);
					this.SendPropertyChanging();
					this._AvgFLOWRATE = value;
					this.SendPropertyChanged("AvgFLOWRATE");
					this.OnAvgFLOWRATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinFLOWRATE", DbType="Int NOT NULL")]
		public int MinFLOWRATE
		{
			get
			{
				return this._MinFLOWRATE;
			}
			set
			{
				if ((this._MinFLOWRATE != value))
				{
					this.OnMinFLOWRATEChanging(value);
					this.SendPropertyChanging();
					this._MinFLOWRATE = value;
					this.SendPropertyChanged("MinFLOWRATE");
					this.OnMinFLOWRATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxINC", DbType="Decimal(4,2) NOT NULL")]
		public decimal MaxINC
		{
			get
			{
				return this._MaxINC;
			}
			set
			{
				if ((this._MaxINC != value))
				{
					this.OnMaxINCChanging(value);
					this.SendPropertyChanging();
					this._MaxINC = value;
					this.SendPropertyChanged("MaxINC");
					this.OnMaxINCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinINC", DbType="Decimal(4,2) NOT NULL")]
		public decimal MinINC
		{
			get
			{
				return this._MinINC;
			}
			set
			{
				if ((this._MinINC != value))
				{
					this.OnMinINCChanging(value);
					this.SendPropertyChanging();
					this._MinINC = value;
					this.SendPropertyChanged("MinINC");
					this.OnMinINCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MudType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MudType
		{
			get
			{
				return this._MudType;
			}
			set
			{
				if ((this._MudType != value))
				{
					this.OnMudTypeChanging(value);
					this.SendPropertyChanging();
					this._MudType = value;
					this.SendPropertyChanged("MudType");
					this.OnMudTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MudPH", DbType="Int NOT NULL")]
		public int MudPH
		{
			get
			{
				return this._MudPH;
			}
			set
			{
				if ((this._MudPH != value))
				{
					this.OnMudPHChanging(value);
					this.SendPropertyChanging();
					this._MudPH = value;
					this.SendPropertyChanged("MudPH");
					this.OnMudPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterOil", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string WaterOil
		{
			get
			{
				return this._WaterOil;
			}
			set
			{
				if ((this._WaterOil != value))
				{
					this.OnWaterOilChanging(value);
					this.SendPropertyChanging();
					this._WaterOil = value;
					this.SendPropertyChanged("WaterOil");
					this.OnWaterOilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="wellinfo_jobinfo", Storage="_jobinfo", ThisKey="WellID", OtherKey="WellID")]
		public EntitySet<jobinfo> jobinfo
		{
			get
			{
				return this._jobinfo;
			}
			set
			{
				this._jobinfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jobinfo(jobinfo entity)
		{
			this.SendPropertyChanging();
			entity.wellinfo = this;
		}
		
		private void detach_jobinfo(jobinfo entity)
		{
			this.SendPropertyChanging();
			entity.wellinfo = null;
		}
	}
}
#pragma warning restore 1591
